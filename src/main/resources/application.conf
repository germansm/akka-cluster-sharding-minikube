akka {
  // Cluster Provider for the System
  actor {
    provider = cluster
  }

  // Use 'artery' for remote communication
  remote {
    artery {
      enabled = on
      transport = tcp
      canonical.hostname = "$hostname"
      canonical.port = 2552
    }
  }
  cluster {
    # Comment seed-nodes to enable the bootstrap process
    seed-nodes = [
      "akka://PublicEventsSystem@127.0.0.1:2552"
//      "akka://PublicEventsSystem@127.0.0.2:2552"
    ]
    sharding.distributed-data.durable.keys = []
    min-nr-of-members = 1
  }
}


akka.discovery {
  // Based on Configuration
  config.services {
    PublicEventsSystem {
      endpoints = [
        {
          host = "127.0.0.1"
          port = 8558
        }
        {
          host = "127.0.0.2"
          port = 8558
        }
      ]
    }
  }

  // Based on AWS-API
  aws-api-ec2-tag-based {
    tag-key = "stack"
  }
}

akka.management {
  http.hostname = "$hostname"
  http.port = 8558
  cluster.bootstrap {
    contact-point-discovery {
      service-name = "PublicEventsSystem"
      discovery-method = config
      //      discovery-method = aws-api-ec2-tag-based
    }
  }
}

include "serialization.conf"