akka {

  loggers = ["akka.event.slf4j.Slf4jLogger"]

  actor.provider = cluster

  remote {
    log-remote-lifecycle-events = off
  }

  coordinated-shutdown.exit-jvm = on

  cluster {
    shutdown-after-unsuccessful-join-seed-nodes = 60s
    sharding.distributed-data.durable.keys = []
    min-nr-of-members = 1
    sharding.number-of-shards = 100
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }
}

akka.management {
  cluster.bootstrap {
    contact-point-discovery {
      discovery-method = kubernetes-api
      required-contact-point-nr = ${?REQUIRED_CONTACT_POINT_NR}
    }
  }
  health-checks {
    readiness-checks {
      example-ready = "com.ksmti.poc.PublicEventsHealthCheck"
    }
  }
}

include "serialization.conf"
include "program.conf"